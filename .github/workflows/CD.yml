name: CD

on:
  push:
    tags:
      - '**'
env:
  ARTIFACT_DIR: dist_artifact

jobs:
  test:
    name: Run tests
    uses: ./.github/workflows/pytest.yml

  get-package-name:
    name: Get package name
    runs-on: ubuntu-latest
    outputs:
      package-name: ${{ steps.get-package-name.outputs.package-name }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      
      - name: Get name
        id: get-package-name
        run: |
          echo "package-name=$(yq '.project.name' pyproject.toml)" >> $GITHUB_OUTPUT
  
  publish-python-package:
    name: Publish Python Package
    uses: access-nri/actions/.github/workflows/publish-python-package.yml@main
    needs: test
    secrets: inherit
    permissions:
      actions: write

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [get-package-name, publish-python-package]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: ${{ needs.publish-python-package.outputs.artifact-name }}
          path: ${{ env.ARTIFACT_DIR }}

      - name: Create Release
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836 #v2.3.3
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ needs.get-package-name.outputs.package-name }} ${{ github.ref_name }}
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: ${{ env.ARTIFACT_DIR }}/*
    
  cleanup-on-failure:
    name: Cleanup on failure
    runs-on: ubuntu-latest
    needs: create-github-release
    # Run this job if any of the previous jobs failed, or if the workflow was cancelled
    if: ${{ ( always() && failure() ) || cancelled() }}
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0 
      
      # Delete newly created tag
      - name: Cleanup tag
        run: |
          git push origin ':${{ github.ref }}'
          echo "A job in the current workflow failed. Tag '${{ github.ref }}' was deleted."
      
      # Delete newly created GitHub release
      - name: Cleanup GitHub release
        run: |
           gh release delete '${{ github.ref_name }}' && echo "GitHub release was deleted." || echo "No GitHub release '${{ github.ref_name }}' to delete."